/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface FluentAcrylic {
      'backgroundSource': 'host-backdrop' | 'backdrop';
      'padding': boolean;
      'tintColor': string;
      'tintOpacity': number;
    }
  }

  interface HTMLFluentAcrylicElement extends StencilComponents.FluentAcrylic, HTMLStencilElement {}

  var HTMLFluentAcrylicElement: {
    prototype: HTMLFluentAcrylicElement;
    new (): HTMLFluentAcrylicElement;
  };
  interface HTMLElementTagNameMap {
    'fluent-acrylic': HTMLFluentAcrylicElement;
  }
  interface ElementTagNameMap {
    'fluent-acrylic': HTMLFluentAcrylicElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'fluent-acrylic': JSXElements.FluentAcrylicAttributes;
    }
  }
  namespace JSXElements {
    export interface FluentAcrylicAttributes extends HTMLAttributes {
      'backgroundSource'?: 'host-backdrop' | 'backdrop';
      'padding'?: boolean;
      'tintColor'?: string;
      'tintOpacity'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface FluentContent {
      'backgroundImage': string;
      'noImage': boolean;
      'theme': 'light' | 'dark';
    }
  }

  interface HTMLFluentContentElement extends StencilComponents.FluentContent, HTMLStencilElement {}

  var HTMLFluentContentElement: {
    prototype: HTMLFluentContentElement;
    new (): HTMLFluentContentElement;
  };
  interface HTMLElementTagNameMap {
    'fluent-content': HTMLFluentContentElement;
  }
  interface ElementTagNameMap {
    'fluent-content': HTMLFluentContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'fluent-content': JSXElements.FluentContentAttributes;
    }
  }
  namespace JSXElements {
    export interface FluentContentAttributes extends HTMLAttributes {
      'backgroundImage'?: string;
      'noImage'?: boolean;
      'theme'?: 'light' | 'dark';
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
